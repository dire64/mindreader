{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ysach\\\\OneDrive\\\\Documents\\\\GitHub\\\\Capstone\\\\src\\\\components\\\\Quiz1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizQuestions = [{\n  question: \"How often do you feel overwhelmed by stress?\",\n  type: \"multiple\",\n  options: [{\n    text: \"Never\",\n    points: 0,\n    followUp: 1\n  }, {\n    text: \"Rarely\",\n    points: 1,\n    followUp: 1\n  }, {\n    text: \"Sometimes\",\n    points: 2,\n    followUp: 1\n  }, {\n    text: \"Often\",\n    points: 3,\n    followUp: 1\n  }, {\n    text: \"Always\",\n    points: 4,\n    followUp: 1\n  }]\n}, {\n  question: \"When stressed, do you have difficulty concentrating?\",\n  type: \"multiple\",\n  options: [{\n    text: \"Never\",\n    points: 0,\n    followUp: 2\n  }, {\n    text: \"Rarely\",\n    points: 1,\n    followUp: 2\n  }, {\n    text: \"Sometimes\",\n    points: 2,\n    followUp: 2\n  }, {\n    text: \"Often\",\n    points: 3,\n    followUp: 2\n  }, {\n    text: \"Always\",\n    points: 4,\n    followUp: 2\n  }]\n}, {\n  question: \"Do you feel irritable or easily frustrated when stressed?\",\n  type: \"multiple\",\n  options: [{\n    text: \"Never\",\n    points: 0,\n    followUp: 3\n  }, {\n    text: \"Rarely\",\n    points: 1,\n    followUp: 3\n  }, {\n    text: \"Sometimes\",\n    points: 2,\n    followUp: 3\n  }, {\n    text: \"Often\",\n    points: 3,\n    followUp: 3\n  }, {\n    text: \"Always\",\n    points: 4,\n    followUp: 3\n  }]\n}, {\n  question: \"How do you typically cope with stress?\",\n  type: \"text\",\n  followUp: 4\n}\n// (Add other questions here)\n];\nconst Quiz1 = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [textAnswer, setTextAnswer] = useState(\"\"); // Handle text input\n  const [selectedOption, setSelectedOption] = useState(null); // Handle radio option selection\n\n  const handleTextChange = event => {\n    setTextAnswer(event.target.value);\n  };\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const handleSubmit = () => {\n    const question = quizQuestions[currentQuestion];\n\n    // Handle \"multiple\" type questions\n    if (question.type === \"multiple\") {\n      if (selectedOption) {\n        const points = parseInt(selectedOption);\n        const followUp = quizQuestions[currentQuestion].options.find(opt => opt.points === points).followUp;\n        setTotalPoints(prevPoints => prevPoints + points);\n        handleFollowUp(followUp);\n        setSelectedOption(null); // Reset selected option after submission\n      } else {\n        alert(\"Please select an option.\");\n      }\n    }\n\n    // Handle \"text\" type questions\n    if (question.type === \"text\") {\n      if (textAnswer.trim() !== \"\") {\n        handleFollowUp(question.followUp);\n        setTextAnswer(\"\"); // Clear the text input after submission\n      } else {\n        alert(\"Please enter your answer.\");\n      }\n    }\n  };\n  const handleFollowUp = followUp => {\n    if (followUp === \"result\") {\n      setQuizCompleted(true);\n    } else {\n      setCurrentQuestion(parseInt(followUp));\n    }\n  };\n  const renderQuestion = () => {\n    const question = quizQuestions[currentQuestion];\n    if (question.type === \"multiple\") {\n      return question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"answer\",\n          value: option.points,\n          checked: selectedOption === option.points.toString(),\n          onChange: handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), option.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this));\n    } else if (question.type === \"text\") {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: textAnswer,\n        onChange: handleTextChange,\n        placeholder: \"Enter your answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const renderResult = () => {\n    let resultText = \"\";\n    if (totalPoints <= 10) {\n      resultText = \"You have excellent stress management skills.\";\n    } else if (totalPoints <= 20) {\n      resultText = \"You have good stress management skills, but there is room for improvement.\";\n    } else if (totalPoints <= 30) {\n      resultText = \"Your stress management skills need improvement. Consider seeking guidance or support.\";\n    } else {\n      resultText = \"You may be struggling with stress management. It is important to seek professional help and develop coping strategies.\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Quiz Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: resultText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: quizCompleted ? renderResult() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: quizQuestions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), renderQuestion(), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz1, \"QmNxYKO3UmnQmGdOKLg79knuQMo=\");\n_c = Quiz1;\nexport default Quiz1;\nvar _c;\n$RefreshReg$(_c, \"Quiz1\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","quizQuestions","question","type","options","text","points","followUp","Quiz1","_s","currentQuestion","setCurrentQuestion","totalPoints","setTotalPoints","quizCompleted","setQuizCompleted","textAnswer","setTextAnswer","selectedOption","setSelectedOption","handleTextChange","event","target","value","handleOptionChange","handleSubmit","parseInt","find","opt","prevPoints","handleFollowUp","alert","trim","renderQuestion","map","option","index","children","name","checked","toString","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","renderResult","resultText","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ysach/OneDrive/Documents/GitHub/Capstone/src/components/Quiz1.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst quizQuestions = [\r\n  {\r\n    question: \"How often do you feel overwhelmed by stress?\",\r\n    type: \"multiple\",\r\n    options: [\r\n      { text: \"Never\", points: 0, followUp: 1 },\r\n      { text: \"Rarely\", points: 1, followUp: 1 },\r\n      { text: \"Sometimes\", points: 2, followUp: 1 },\r\n      { text: \"Often\", points: 3, followUp: 1 },\r\n      { text: \"Always\", points: 4, followUp: 1 },\r\n    ],\r\n  },\r\n  {\r\n    question: \"When stressed, do you have difficulty concentrating?\",\r\n    type: \"multiple\",\r\n    options: [\r\n      { text: \"Never\", points: 0, followUp: 2 },\r\n      { text: \"Rarely\", points: 1, followUp: 2 },\r\n      { text: \"Sometimes\", points: 2, followUp: 2 },\r\n      { text: \"Often\", points: 3, followUp: 2 },\r\n      { text: \"Always\", points: 4, followUp: 2 },\r\n    ],\r\n  },\r\n  {\r\n    question: \"Do you feel irritable or easily frustrated when stressed?\",\r\n    type: \"multiple\",\r\n    options: [\r\n      { text: \"Never\", points: 0, followUp: 3 },\r\n      { text: \"Rarely\", points: 1, followUp: 3 },\r\n      { text: \"Sometimes\", points: 2, followUp: 3 },\r\n      { text: \"Often\", points: 3, followUp: 3 },\r\n      { text: \"Always\", points: 4, followUp: 3 },\r\n    ],\r\n  },\r\n  {\r\n    question: \"How do you typically cope with stress?\",\r\n    type: \"text\",\r\n    followUp: 4,\r\n  },\r\n  // (Add other questions here)\r\n];\r\n\r\nconst Quiz1 = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [totalPoints, setTotalPoints] = useState(0);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [textAnswer, setTextAnswer] = useState(\"\"); // Handle text input\r\n  const [selectedOption, setSelectedOption] = useState(null); // Handle radio option selection\r\n\r\n  const handleTextChange = (event) => {\r\n    setTextAnswer(event.target.value);\r\n  };\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const question = quizQuestions[currentQuestion];\r\n\r\n    // Handle \"multiple\" type questions\r\n    if (question.type === \"multiple\") {\r\n      if (selectedOption) {\r\n        const points = parseInt(selectedOption);\r\n        const followUp = quizQuestions[currentQuestion].options.find(\r\n          (opt) => opt.points === points\r\n        ).followUp;\r\n\r\n        setTotalPoints((prevPoints) => prevPoints + points);\r\n        handleFollowUp(followUp);\r\n        setSelectedOption(null); // Reset selected option after submission\r\n      } else {\r\n        alert(\"Please select an option.\");\r\n      }\r\n    }\r\n\r\n    // Handle \"text\" type questions\r\n    if (question.type === \"text\") {\r\n      if (textAnswer.trim() !== \"\") {\r\n        handleFollowUp(question.followUp);\r\n        setTextAnswer(\"\"); // Clear the text input after submission\r\n      } else {\r\n        alert(\"Please enter your answer.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFollowUp = (followUp) => {\r\n    if (followUp === \"result\") {\r\n      setQuizCompleted(true);\r\n    } else {\r\n      setCurrentQuestion(parseInt(followUp));\r\n    }\r\n  };\r\n\r\n  const renderQuestion = () => {\r\n    const question = quizQuestions[currentQuestion];\r\n\r\n    if (question.type === \"multiple\") {\r\n      return question.options.map((option, index) => (\r\n        <label key={index}>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"answer\"\r\n            value={option.points}\r\n            checked={selectedOption === option.points.toString()}\r\n            onChange={handleOptionChange}\r\n          />\r\n          {option.text}\r\n        </label>\r\n      ));\r\n    } else if (question.type === \"text\") {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          value={textAnswer}\r\n          onChange={handleTextChange}\r\n          placeholder=\"Enter your answer\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderResult = () => {\r\n    let resultText = \"\";\r\n    if (totalPoints <= 10) {\r\n      resultText = \"You have excellent stress management skills.\";\r\n    } else if (totalPoints <= 20) {\r\n      resultText =\r\n        \"You have good stress management skills, but there is room for improvement.\";\r\n    } else if (totalPoints <= 30) {\r\n      resultText =\r\n        \"Your stress management skills need improvement. Consider seeking guidance or support.\";\r\n    } else {\r\n      resultText =\r\n        \"You may be struggling with stress management. It is important to seek professional help and develop coping strategies.\";\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>Quiz Result</h3>\r\n        <p>{resultText}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {quizCompleted ? (\r\n        renderResult()\r\n      ) : (\r\n        <div>\r\n          <h3>{quizQuestions[currentQuestion].question}</h3>\r\n          {renderQuestion()}\r\n          <button type=\"button\" onClick={handleSubmit}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}