{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GUES\\\\Documents\\\\GitHub\\\\mindreader\\\\react\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../assets/ChatBot.css\";\nimport { auth } from \"../firebase\";\nimport { ChatService } from \"../ChatService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const chatBoxContentRef = useRef(null);\n  useEffect(() => {\n    if (chatBoxContentRef.current) {\n      chatBoxContentRef.current.scrollTop = chatBoxContentRef.current.scrollHeight;\n    }\n  }, [messages]);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async currentUser => {\n      try {\n        if (currentUser) {\n          setUser(currentUser);\n          const userData = await ChatService.getUserData(currentUser.uid);\n          if (userData.last_conversation_summary) {\n            // Add the summary as the first message\n            setMessages([{\n              text: userData.last_conversation_summary,\n              sender: \"bot\"\n            }]);\n          } else {\n            const welcomeMessage = \"Welcome! How can I assist you today?\";\n            setMessages([{\n              text: welcomeMessage,\n              sender: \"bot\"\n            }]);\n          }\n        } else {\n          setUser(null);\n          const welcomeMessage = \"Welcome to our mental health chatbot! How can I assist you today?\";\n          setMessages([{\n            text: welcomeMessage,\n            sender: \"bot\"\n          }]);\n        }\n      } catch (error) {\n        console.error(\"Error loading user data:\", error);\n        setError(\"Error loading user data\");\n        const errorMessage = \"Welcome! How can I assist you today?\";\n        setMessages([{\n          text: errorMessage,\n          sender: \"bot\"\n        }]);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const toggleChat = () => {\n    setIsChatOpen(!isChatOpen);\n    if (!isChatOpen) {\n      setError(null);\n    }\n  };\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n    try {\n      setIsLoading(true);\n      setError(null);\n      const userMessage = {\n        text: message,\n        sender: \"user\"\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      setMessage(\"\");\n      let response;\n      if (user) {\n        const token = await user.getIdToken();\n        response = await fetch(\"http://localhost:8000/chat/authenticated\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            message: userMessage.text\n          })\n        });\n      } else {\n        response = await fetch(\"http://localhost:8000/chat/unauthenticated\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            input: {\n              message: userMessage.text\n            }\n          })\n        });\n      }\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const botResponse = user ? data.response : data.output.content;\n\n      // Add bot's response to messages\n      setMessages(prevMessages => [...prevMessages, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n\n      // No need to manually update chat history as the server handles it\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setError(\"Failed to send message. Please try again.\");\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"Sorry, there was an error processing your request. Please try again.\",\n        sender: \"bot\"\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat-widget\",\n    children: [!isChatOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"chat-button\",\n      onClick: toggleChat,\n      children: \"Chat with us!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-box-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Chat with us!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-box-content\",\n        ref: chatBoxContentRef,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.sender}-message`,\n          style: {\n            opacity: msg.sending ? 0.7 : 1\n          },\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message bot-message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-box-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"user-input\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          disabled: isLoading,\n          rows: \"1\",\n          style: {\n            resize: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"send-button\",\n          onClick: sendMessage,\n          disabled: isLoading || message.trim() === \"\",\n          children: isLoading ? \"...\" : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"d0em54V2s3/zGUJntmZkkAClo8A=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","auth","ChatService","jsxDEV","_jsxDEV","Chatbot","_s","isChatOpen","setIsChatOpen","message","setMessage","messages","setMessages","user","setUser","isLoading","setIsLoading","error","setError","chatBoxContentRef","current","scrollTop","scrollHeight","unsubscribe","onAuthStateChanged","currentUser","userData","getUserData","uid","last_conversation_summary","text","sender","welcomeMessage","console","errorMessage","toggleChat","sendMessage","trim","userMessage","prevMessages","response","token","getIdToken","fetch","method","headers","Authorization","body","JSON","stringify","input","ok","Error","status","data","json","botResponse","output","content","handleKeyPress","e","key","shiftKey","preventDefault","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","index","className","style","opacity","sending","placeholder","value","onChange","target","onKeyPress","disabled","rows","resize","_c","$RefreshReg$"],"sources":["C:/Users/GUES/Documents/GitHub/mindreader/react/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../assets/ChatBot.css\";\r\nimport { auth } from \"../firebase\";\r\nimport { ChatService } from \"../ChatService\";\r\n\r\nexport default function Chatbot() {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const chatBoxContentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chatBoxContentRef.current) {\r\n      chatBoxContentRef.current.scrollTop = chatBoxContentRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (currentUser) => {\r\n      try {\r\n        if (currentUser) {\r\n          setUser(currentUser);\r\n          const userData = await ChatService.getUserData(currentUser.uid);\r\n          \r\n          if (userData.last_conversation_summary) {\r\n            // Add the summary as the first message\r\n            setMessages([\r\n              { text: userData.last_conversation_summary, sender: \"bot\" }\r\n            ]);\r\n          } else {\r\n            const welcomeMessage = \"Welcome! How can I assist you today?\";\r\n            setMessages([{ text: welcomeMessage, sender: \"bot\" }]);\r\n          }\r\n        } else {\r\n          setUser(null);\r\n          const welcomeMessage = \"Welcome to our mental health chatbot! How can I assist you today?\";\r\n          setMessages([{ text: welcomeMessage, sender: \"bot\" }]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading user data:\", error);\r\n        setError(\"Error loading user data\");\r\n        const errorMessage = \"Welcome! How can I assist you today?\";\r\n        setMessages([{ text: errorMessage, sender: \"bot\" }]);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const toggleChat = () => {\r\n    setIsChatOpen(!isChatOpen);\r\n    if (!isChatOpen) {\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const userMessage = { text: message, sender: \"user\" };\r\n      setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n      setMessage(\"\");\r\n\r\n      let response;\r\n      if (user) {\r\n        const token = await user.getIdToken();\r\n        response = await fetch(\"http://localhost:8000/chat/authenticated\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({\r\n            message: userMessage.text,\r\n          }),\r\n        });\r\n      } else {\r\n        response = await fetch(\"http://localhost:8000/chat/unauthenticated\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            input: {\r\n              message: userMessage.text,\r\n            },\r\n          }),\r\n        });\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const botResponse = user ? data.response : data.output.content;\r\n\r\n      // Add bot's response to messages\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { text: botResponse, sender: \"bot\" },\r\n      ]);\r\n\r\n      // No need to manually update chat history as the server handles it\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setError(\"Failed to send message. Please try again.\");\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        {\r\n          text: \"Sorry, there was an error processing your request. Please try again.\",\r\n          sender: \"bot\",\r\n        },\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"chat-widget\">\r\n      {!isChatOpen && (\r\n        <button id=\"chat-button\" onClick={toggleChat}>\r\n          Chat with us!\r\n        </button>\r\n      )}\r\n\r\n      {isChatOpen && (\r\n        <div id=\"chat-box\">\r\n          <div id=\"chat-box-header\">\r\n            <span>Chat with us!</span>\r\n            <button onClick={toggleChat}>Close</button>\r\n          </div>\r\n\r\n          <div id=\"chat-box-content\" ref={chatBoxContentRef}>\r\n            {messages.map((msg, index) => (\r\n              <div\r\n                key={index}\r\n                className={`chat-message ${msg.sender}-message`}\r\n                style={{\r\n                  opacity: msg.sending ? 0.7 : 1,\r\n                }}\r\n              >\r\n                {msg.text}\r\n              </div>\r\n            ))}\r\n\r\n            {isLoading && (\r\n              <div className=\"chat-message bot-message\">\r\n                <div className=\"typing-indicator\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n          </div>\r\n\r\n          <div id=\"chat-box-input\">\r\n            <textarea\r\n              id=\"user-input\"\r\n              placeholder=\"Type your message...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              disabled={isLoading}\r\n              rows=\"1\"\r\n              style={{ resize: \"none\" }}\r\n            />\r\n            <button\r\n              id=\"send-button\"\r\n              onClick={sendMessage}\r\n              disabled={isLoading || message.trim() === \"\"}\r\n            >\r\n              {isLoading ? \"...\" : \"Send\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,uBAAuB;AAC9B,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMqB,iBAAiB,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAIoB,iBAAiB,CAACC,OAAO,EAAE;MAC7BD,iBAAiB,CAACC,OAAO,CAACC,SAAS,GAAGF,iBAAiB,CAACC,OAAO,CAACE,YAAY;IAC9E;EACF,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEdZ,SAAS,CAAC,MAAM;IACd,MAAMwB,WAAW,GAAGtB,IAAI,CAACuB,kBAAkB,CAAC,MAAOC,WAAW,IAAK;MACjE,IAAI;QACF,IAAIA,WAAW,EAAE;UACfX,OAAO,CAACW,WAAW,CAAC;UACpB,MAAMC,QAAQ,GAAG,MAAMxB,WAAW,CAACyB,WAAW,CAACF,WAAW,CAACG,GAAG,CAAC;UAE/D,IAAIF,QAAQ,CAACG,yBAAyB,EAAE;YACtC;YACAjB,WAAW,CAAC,CACV;cAAEkB,IAAI,EAAEJ,QAAQ,CAACG,yBAAyB;cAAEE,MAAM,EAAE;YAAM,CAAC,CAC5D,CAAC;UACJ,CAAC,MAAM;YACL,MAAMC,cAAc,GAAG,sCAAsC;YAC7DpB,WAAW,CAAC,CAAC;cAAEkB,IAAI,EAAEE,cAAc;cAAED,MAAM,EAAE;YAAM,CAAC,CAAC,CAAC;UACxD;QACF,CAAC,MAAM;UACLjB,OAAO,CAAC,IAAI,CAAC;UACb,MAAMkB,cAAc,GAAG,mEAAmE;UAC1FpB,WAAW,CAAC,CAAC;YAAEkB,IAAI,EAAEE,cAAc;YAAED,MAAM,EAAE;UAAM,CAAC,CAAC,CAAC;QACxD;MACF,CAAC,CAAC,OAAOd,KAAK,EAAE;QACdgB,OAAO,CAAChB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDC,QAAQ,CAAC,yBAAyB,CAAC;QACnC,MAAMgB,YAAY,GAAG,sCAAsC;QAC3DtB,WAAW,CAAC,CAAC;UAAEkB,IAAI,EAAEI,YAAY;UAAEH,MAAM,EAAE;QAAM,CAAC,CAAC,CAAC;MACtD;IACF,CAAC,CAAC;IAEF,OAAO,MAAMR,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvB3B,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1B,IAAI,CAACA,UAAU,EAAE;MACfW,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;EAED,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI3B,OAAO,CAAC4B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE3B,IAAI;MACFrB,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMoB,WAAW,GAAG;QAAER,IAAI,EAAErB,OAAO;QAAEsB,MAAM,EAAE;MAAO,CAAC;MACrDnB,WAAW,CAAE2B,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,WAAW,CAAC,CAAC;MAC7D5B,UAAU,CAAC,EAAE,CAAC;MAEd,IAAI8B,QAAQ;MACZ,IAAI3B,IAAI,EAAE;QACR,MAAM4B,KAAK,GAAG,MAAM5B,IAAI,CAAC6B,UAAU,CAAC,CAAC;QACrCF,QAAQ,GAAG,MAAMG,KAAK,CAAC,0CAA0C,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAE,UAAUL,KAAK;UAChC,CAAC;UACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBxC,OAAO,EAAE6B,WAAW,CAACR;UACvB,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,MAAM;QACLU,QAAQ,GAAG,MAAMG,KAAK,CAAC,4CAA4C,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,KAAK,EAAE;cACLzC,OAAO,EAAE6B,WAAW,CAACR;YACvB;UACF,CAAC;QACH,CAAC,CAAC;MACJ;MAEA,IAAI,CAACU,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBZ,QAAQ,CAACa,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;MAClC,MAAMC,WAAW,GAAG3C,IAAI,GAAGyC,IAAI,CAACd,QAAQ,GAAGc,IAAI,CAACG,MAAM,CAACC,OAAO;;MAE9D;MACA9C,WAAW,CAAE2B,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAET,IAAI,EAAE0B,WAAW;QAAEzB,MAAM,EAAE;MAAM,CAAC,CACrC,CAAC;;MAEF;IAEF,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdgB,OAAO,CAAChB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,2CAA2C,CAAC;MACrDN,WAAW,CAAE2B,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QACET,IAAI,EAAE,sEAAsE;QAC5EC,MAAM,EAAE;MACV,CAAC,CACF,CAAC;IACJ,CAAC,SAAS;MACRf,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM2C,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClB3B,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,oBACEhC,OAAA;IAAK4D,EAAE,EAAC,aAAa;IAAAC,QAAA,GAClB,CAAC1D,UAAU,iBACVH,OAAA;MAAQ4D,EAAE,EAAC,aAAa;MAACE,OAAO,EAAE/B,UAAW;MAAA8B,QAAA,EAAC;IAE9C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,EAEA/D,UAAU,iBACTH,OAAA;MAAK4D,EAAE,EAAC,UAAU;MAAAC,QAAA,gBAChB7D,OAAA;QAAK4D,EAAE,EAAC,iBAAiB;QAAAC,QAAA,gBACvB7D,OAAA;UAAA6D,QAAA,EAAM;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1BlE,OAAA;UAAQ8D,OAAO,EAAE/B,UAAW;UAAA8B,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eAENlE,OAAA;QAAK4D,EAAE,EAAC,kBAAkB;QAACO,GAAG,EAAEpD,iBAAkB;QAAA8C,QAAA,GAC/CtD,QAAQ,CAAC6D,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBtE,OAAA;UAEEuE,SAAS,EAAE,gBAAgBF,GAAG,CAAC1C,MAAM,UAAW;UAChD6C,KAAK,EAAE;YACLC,OAAO,EAAEJ,GAAG,CAACK,OAAO,GAAG,GAAG,GAAG;UAC/B,CAAE;UAAAb,QAAA,EAEDQ,GAAG,CAAC3C;QAAI,GANJ4C,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP,CACN,CAAC,EAEDvD,SAAS,iBACRX,OAAA;UAAKuE,SAAS,EAAC,0BAA0B;UAAAV,QAAA,eACvC7D,OAAA;YAAKuE,SAAS,EAAC,kBAAkB;YAAAV,QAAA,gBAC/B7D,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACblE,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACblE,OAAA;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEArD,KAAK,iBAAIb,OAAA;UAAKuE,SAAS,EAAC,eAAe;UAAAV,QAAA,EAAEhD;QAAK;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eAENlE,OAAA;QAAK4D,EAAE,EAAC,gBAAgB;QAAAC,QAAA,gBACtB7D,OAAA;UACE4D,EAAE,EAAC,YAAY;UACfe,WAAW,EAAC,sBAAsB;UAClCC,KAAK,EAAEvE,OAAQ;UACfwE,QAAQ,EAAGrB,CAAC,IAAKlD,UAAU,CAACkD,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;UAC5CG,UAAU,EAAExB,cAAe;UAC3ByB,QAAQ,EAAErE,SAAU;UACpBsE,IAAI,EAAC,GAAG;UACRT,KAAK,EAAE;YAAEU,MAAM,EAAE;UAAO;QAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACFlE,OAAA;UACE4D,EAAE,EAAC,aAAa;UAChBE,OAAO,EAAE9B,WAAY;UACrBgD,QAAQ,EAAErE,SAAS,IAAIN,OAAO,CAAC4B,IAAI,CAAC,CAAC,KAAK,EAAG;UAAA4B,QAAA,EAE5ClD,SAAS,GAAG,KAAK,GAAG;QAAM;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChE,EAAA,CAjMuBD,OAAO;AAAAkF,EAAA,GAAPlF,OAAO;AAAA,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}