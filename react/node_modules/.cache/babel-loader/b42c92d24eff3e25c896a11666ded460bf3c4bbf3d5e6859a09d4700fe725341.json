{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GUES\\\\Documents\\\\GitHub\\\\mindreader\\\\react\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../assets/ChatBot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const chatBoxContentRef = useRef(null);\n  useEffect(() => {\n    // Scroll to bottom when messages change\n    if (chatBoxContentRef.current) {\n      chatBoxContentRef.current.scrollTop = chatBoxContentRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const toggleChat = () => {\n    setIsChatOpen(!isChatOpen);\n  };\n  const sendMessage = async () => {\n    if (message.trim() !== \"\") {\n      // Add user message to chat\n      setMessages(prevMessages => [...prevMessages, {\n        text: message,\n        sender: 'user'\n      }]);\n      setMessage(\"\"); // Clear the input field\n\n      try {\n        const response = await fetch('http://localhost:8000/chat/invoke', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"input\": {\n              \"message\": message\n            },\n            \"config\": {},\n            \"kwargs\": {}\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Add bot response to chat\n        setMessages(prevMessages => [...prevMessages, {\n          text: data.output.content,\n          sender: 'bot'\n        }]);\n      } catch (error) {\n        console.error('Error:', error);\n        // Optionally, add an error message to the chat\n        setMessages(prevMessages => [...prevMessages, {\n          text: \"Sorry, there was an error processing your request.\",\n          sender: 'bot'\n        }]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat-widget\",\n    children: [!isChatOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"chat-button\",\n      onClick: toggleChat,\n      children: \"Chat with us!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-box-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Chat with us!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-box-content\",\n        ref: chatBoxContentRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.sender}-message`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-box-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user-input\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"send-button\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"SXXEBYTAbtMsd7eRZ7WxAGqn4xE=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","_s","isChatOpen","setIsChatOpen","message","setMessage","messages","setMessages","chatBoxContentRef","current","scrollTop","scrollHeight","toggleChat","sendMessage","trim","prevMessages","text","sender","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","output","content","error","console","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","index","className","type","placeholder","value","onChange","e","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/Users/GUES/Documents/GitHub/mindreader/react/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../assets/ChatBot.css\";\r\n\r\nexport default function Chatbot() {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const chatBoxContentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Scroll to bottom when messages change\r\n    if (chatBoxContentRef.current) {\r\n      chatBoxContentRef.current.scrollTop = chatBoxContentRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const toggleChat = () => {\r\n    setIsChatOpen(!isChatOpen);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() !== \"\") {\r\n      // Add user message to chat\r\n      setMessages(prevMessages => [...prevMessages, { text: message, sender: 'user' }]);\r\n      setMessage(\"\"); // Clear the input field\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:8000/chat/invoke', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            \"input\": {\r\n              \"message\": message\r\n            },\r\n            \"config\": {},\r\n            \"kwargs\": {}\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        // Add bot response to chat\r\n        setMessages(prevMessages => [...prevMessages, { text: data.output.content, sender: 'bot' }]);\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        // Optionally, add an error message to the chat\r\n        setMessages(prevMessages => [...prevMessages, { text: \"Sorry, there was an error processing your request.\", sender: 'bot' }]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"chat-widget\">\r\n      {!isChatOpen && (\r\n        <button id=\"chat-button\" onClick={toggleChat}>\r\n          Chat with us!\r\n        </button>\r\n      )}\r\n\r\n      {isChatOpen && (\r\n        <div id=\"chat-box\">\r\n          <div id=\"chat-box-header\">\r\n            <span>Chat with us!</span>\r\n            <button onClick={toggleChat}>Close</button>\r\n          </div>\r\n          <div id=\"chat-box-content\" ref={chatBoxContentRef}>\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={`chat-message ${msg.sender}-message`}>\r\n                {msg.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div id=\"chat-box-input\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"user-input\"\r\n              placeholder=\"Type your message...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n            />\r\n            <button id=\"send-button\" onClick={sendMessage}>\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}